# -*- coding: utf-8 -*-
"""Heat Capacity.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/WereszczynskiClasses/assignment-week-8-andrguardia/blob/main/Heat_Capacity.ipynb

#Heat capacity of a solid

Debye's theory of solids gives the heat capacity of a solid at temperature $T$ to be:

$C_V = 9V\rho k_B \left(\frac{T}{\theta_D} \right)^3 \int_0^{\theta_D/T}
      \frac{x^4 e^x}{\left(e^x-1\right)^2} dx
$

where $V$ is the volume of the solid, $\rho$ is the number density of
atoms, $k_B$ is Boltzmann's constant, and $\theta_D$ is the so-called
"Debye temperature", a property of solids that depends on their
density and speed of sound.

##A.
Write a Python function ```cv(T)``` that calculates $C_V$ for a
  given value of the temperature, for a sample consisting of 1000 cubic
  centimeters of solid aluminum, which has a number density of
  $\rho=6.022\times10^{28}\,\mathrm{m}^{-3}$ and a Debye temperature of
  $\theta_D=428\,$K.  Use Gaussian quadrature to evaluate the integral,
  with $N=50$ sample points.
"""

from numpy.polynomial.legendre import leggauss
import numpy as np

def Cv(T):
  #Defining Constants
  V = 0.001 #Volume in m^3
  rho = 6.022e28 #Density in m^-3
  kb = 1.38064852e-23 #Boltzmann's Constant in m^2*kg/s^2*K
  theta_d = 428 #Debye Temperature in Kelvin
  b = theta_d/T
  a = 0

  def f(x):
    return ((x**4)*np.exp(x))/((np.exp(x)-1)**2)

  for N in range(1,51):
    x_k, w_k = leggauss(N)
    x_n = x_k*(b-a)*0.5+(b+a)*0.5
    w_n = w_k*(b-a) * 0.5
    y = f(x_n)
    integral = np.sum(w_n * y)
  Cv = 9*V*rho*kb*((T/theta_d)**3)*integral
  return Cv

Cv(100)

"""##B.
Use your function to make a graph of the heat capacity as a function
  of temperature from $T=5\,$K to $T=500\,$K.
"""

T = np.arange(5,501)
Cv_arr = []
for k in np.arange(0,len(T)):
  HeatCap = Cv(T[k])
  Cv_arr.append(HeatCap)

import matplotlib.pyplot as plt
plt.plot(T, Cv_arr,'r')
plt.title('Heat Capacity  vs Temperature')
plt.xlabel('Temperature [K]')
plt.ylabel('Heat Capacity [J/kg*K]')
plt.show()